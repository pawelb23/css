body {
    background-color: #a0c0dd;
    font-family: cursive;
}

div#flex-container {
    display: flex;
    height: auto;
/*  height: 90vh; */
    /* Tyle ile wysokości ma container główny tyle wysokości będą miały dzieci (czyli zajmą całą powierzchnię)*/
    
/*  align-items: center;*/
    /* align-items: stretch; jest ustawione standardowo (nie trzeba tego ustawiać */
    /* align-items: baseline; sprawdzić wraz z div'em zakomentowanym w html (w dużym skrócie wyrównuje tekst do pewnej linii) */
    
/*  justify-content: center;*/
/*  justify-content: flex-start;*/
    /*     justify-content: flex-start; jest standardowo ustawione, nie trzeba tego ustawiać */
    padding: 15px;
    color: antiquewhite;
    background-color: #1d8484;
    border: 5px solid brown;
    flex-wrap: wrap;
/*    flex-wrap --- dzięki temu elementy, które się nie mieszczą w jednej linii przenoszone są do kolejnej */
/*    flex-wrap: nowrap; --- jest ustawione standardowo, nie pozwala na przeskoki niemieszczących się elementów do innej lini */


}

div.flex-item {
    border: 3px solid green;
    padding: 25px;
    margin: 5px;
    flex: 1;
/*  flex-basis: 250px */
/*     flex-basis - jest odpowiednikiem width lub height (tyle, że dla elementów flexbox'owych), ale ważniejszym, gdyż nadpisuje width, czy height */
    
/*  width: 200px;
    /*    'width' działa z 'justify-content' ale aby sprawdzić działanie trzeba zakomentować flex: 1; (z tym nie działa) i odkomentować width: lub flex-basis: i justify-content:*/
}

div.numer2 {
    margin-left: 15px;
    margin-right: 15px;
/*    Zamiast tych marginesów i całej zabawy, można było wrzucić odpowiedni padding na główny kontener i odpowiednio wyrównać odległości na wewnętrzynych kontenerach, dzięki czemu nie było by (przy mniejszych wielkościach) problemu z wyśrodkowaniem elementów, bo nie byłoby dodatkowych marginesów --- np. tak jak tu na środkowym div'ie. Nie trzeba byłoby stosować wtedy @media do wyrównywania obiektów przy różnej rozdzielczości.*/
}

h1 {
    font-weight: bold;
    text-align: center;
    color: #2f210e;
}

@media (min-width: 424px) and (max-width: 641px) {
    div.numer2 {
        margin-left: 0;
        margin-right: 0;


    }

    div.numer3 {
        margin-right: 0px;
    }
}

@media (max-width: 423px) {
    div.flex-item {
        margin-left: 0;
        margin-right: 0;
    }
}
/*    justify-content --- odpowiada za ustawienie w poziomie, a align-items za ustawienie w pionie */

/*
 flex-grow --- definiuje w jakim tępie ma się zwiększać dany element 
flex-grow: 5;

 flex-shrink --- definiuje w jakim tępie ma się zmniejszać dany element 
flex-shrink: 5;
*/

/*==================================================================*/

/*Jeżeli zakomentujemy wszystko ponad linią powyżej i odkomentujemy to co poniżej to wyśrodkujemy tekst w poziomie i w pionie.*/

/*
body {
    background-color: #a0c0dd;
    font-family: cursive;
}

div#flex-container {
    display: flex;
    height: auto;
    height: 90vh; 
    align-items: center;
    justify-content: center;
    padding: 15px;
    color: antiquewhite;
    background-color: #1d8484;
    border: 5px solid brown;
}

div.flex-item {
    border: 3px solid green;
    padding: 25px;
    margin: 5px;
    flex-basis: 150px;
}

div.numer2 {
    margin-left: 15px;
    margin-right: 15px;
}

h1 {
    font-weight: bold;
    text-align: center;
    color: #2f210e;
}
*/
